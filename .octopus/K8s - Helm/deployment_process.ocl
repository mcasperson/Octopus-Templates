step "create-namespace" {
    name = "Create Namespace"
    properties = {
        Octopus.Action.TargetRoles = "eks"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        notes = "Creates the namespace if it does not exist."
        properties = {
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = <<-EOT
                NAMESPACE=mizuho-#{Octopus.Environment.Name | ToLower}
                
                if kubectl get namespace "$NAMESPACE" > /dev/null 2>&1; then
                  echo "Namespace '$NAMESPACE' exists."
                else
                  kubectl create ns $NAMESPACE
                fi
                
                
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""

        container {
            feed = "dockerhub"
            image = "octopusdeploy/worker-tools:6.3.0-ubuntu.22.04"
        }
    }
}

step "deploy-microservice" {
    name = "Deploy Microservice"
    properties = {
        Octopus.Action.TargetRoles = "eks"
    }

    action {
        action_type = "Octopus.HelmChartUpgrade"
        notes = "Deploys the microservice Helm chart."
        properties = {
            Octopus.Action.Helm.ClientVersion = "V3"
            Octopus.Action.Helm.Namespace = "mizuho-#{Octopus.Environment.Name | ToLower}"
            Octopus.Action.Helm.ReleaseName = "deploymicroservice-#{Octopus.Environment.Name | ToLower}"
            Octopus.Action.Helm.ResetValues = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "learn-devops"
            Octopus.Action.Package.PackageId = "echo-server"
            Octopus.Action.Script.ScriptSource = "Package"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "dockerhub"
            image = "octopusdeploy/worker-tools:6.3.0-ubuntu.22.04"
        }

        packages {
            acquisition_location = "Server"
            feed = "learn-devops"
            package_id = "echo-server"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}